{"version":3,"sources":["services/firebase.ts","providers/UserProvider.tsx","services/database.ts","pages/MainPage.tsx","Login.tsx","pages/CreatePage.tsx","components/Debug.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["dotenv","config","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","getAuth","db","getFirestore","googleProvider","GoogleAuthProvider","signInWithGoogle","signInWithPopup","catch","error","console","log","message","UserContext","createContext","UserProvider","children","useState","user","setUser","useEffect","onAuthStateChanged","_user","a","Provider","value","getAllEvents","getDocs","collectionGroup","MainPage","React","events","setEvents","then","docs","map","doc","data","size","height","maxHeight","useWindowScroll","totalCount","length","itemContent","index","event","EventItem","title","description","Date","date","seconds","toLocaleDateString","Login","alignSelf","leftIcon","src","alt","onClick","CreatePage","setTitle","setDescription","setDate","creator","setCreator","numberOfPeopleMin","setNumberOfPeopleMin","numberOfPeopleMax","setNumberOfPeopleMax","useContext","callback","e","d","onSnapshot","snapshot","borderWidth","borderRadius","padding","onSubmit","preventDefault","setDoc","collection","uid","saveEvent","isRequired","id","type","onChange","target","initialValue","onDateChange","isInline","defaultValue","min","max","mt","colorScheme","query","orderBy","getOwnEvents","Debug","allEvents","setAllEvents","margin","JSON","stringify","signOut","theme","extendTheme","initialColorMode","useSystemColorMode","App","w","orientation","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qRAQAA,IAAOC,SACPC,YAAc,CACZC,OAAQC,0CACRC,WAAYD,gCACZE,UAAWF,gBACXG,cAAeH,4BACfI,kBAAoBJ,eACpBK,MAAOL,4CACPM,cAAeN,iBAGV,IAAMO,EAAOC,cACPC,EAAKC,cAEZC,EAAiB,IAAIC,IACdC,EAAmB,WAC9B,OAAOC,YAAgBP,EAAMI,GAAgBI,OAAM,SAACC,GAClDC,QAAQC,IAAIF,EAAMG,a,QCtBTC,EAAcC,wBAA2B,MAGzCC,EAAyB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EAC5BC,mBAAsB,MADM,mBAC7CC,EAD6C,KACvCC,EADuC,KAQpD,OANAC,qBAAU,WACNC,YAAmBrB,EAAD,uCAAO,WAAOsB,GAAP,SAAAC,EAAA,sDACrBJ,EAAQG,GADa,2CAAP,yDAGnB,IAGC,cAACT,EAAYW,SAAb,CAAsBC,MAAOP,EAA7B,SAAoCF,K,8DCH/BU,EAAe,WAExB,OAAOC,YAAQC,YAAgB1B,EAAI,YCL1B2B,EAAW,WAAM,MAGEC,IAAMb,SAAyB,IAHjC,mBAGnBc,EAHmB,KAGXC,EAHW,KAc1B,OATAZ,qBAAU,WACNM,IAAeO,MAAK,SAAAF,GAAM,OAAIC,EAAUD,EAAOG,KAAKC,KAAI,SAAAC,GAAG,OAAIA,EAAIC,gBACrE,IAGFjB,qBAAU,WACNV,QAAQC,IAAIoB,MAIZ,gCACI,cAAC,IAAD,CAASO,KAAK,KAAd,wBAGA,kDAEA,wCACA,cAAC,IAAD,CAAKC,OAAO,KAAKC,UAAU,KAA3B,SAEA,cAAC,IAAD,CACIC,iBAAe,EACfF,OAAO,OACPG,WAAYX,EAAOY,OACnBC,YAAa,SAACC,GAAD,OAAW,cAAC,EAAD,CAAWC,MAAQf,EAAOc,cAUrDE,EAAY,SAACD,GACtB,OACI,qCACA,cAAC,IAAD,IACA,eAAC,IAAD,WAKI,cAAC,IAAD,UAAaA,EAAMA,MAAME,QACzB,cAAC,IAAD,UAAYF,EAAMA,MAAMG,cACxB,cAAC,IAAD,UAAe,IAAIC,KAAgC,IAA3BJ,EAAMA,MAAMK,KAAKC,SAAgBC,8B,iGCrDxDC,EAAQ,kBACjB,cAAC,IAAD,CACEC,UAAU,SACVC,SAAU,qBAAKC,IAAK,qHAAsHC,IAAI,KAC9IC,QAASrD,EAHX,mCCGSsD,EAAa,WAAO,IAAD,EAEF9B,IAAMb,SAAS,IAFb,mBAErB+B,EAFqB,KAEda,EAFc,OAGU/B,IAAMb,SAAS,IAHzB,mBAGrBgC,EAHqB,KAGRa,EAHQ,OAIJhC,IAAMb,SAAS,IAAIiC,MAJf,mBAIrBC,EAJqB,KAIfY,EAJe,OAKEjC,IAAMb,SAAS,IALjB,mBAKrB+C,EALqB,KAKZC,EALY,OAMsBnC,IAAMb,SAAS,GANrC,mBAMrBiD,EANqB,KAMFC,EANE,OAOsBrC,IAAMb,SAAS,IAPrC,mBAOrBmD,EAPqB,KAOFC,EAPE,KAStBnD,EAAOoD,qBAAWzD,GAQxB,OANAO,qBAAU,WHHiB,IAACmD,IGIR,SAAAC,GACZ9D,QAAQC,IAAI,yBAA0B6D,EAAEtC,KAAKC,KAAI,SAAAsC,GAAC,OAAIA,EAAEpC,YHJhEqC,YACI9C,YAAgB1B,EAAI,WACpB,SAACyE,GAAD,OAAeJ,EAASI,QGIzB,IAGC,gCACI,6CACA,cAAC,IAAD,CAAKC,YAAY,MAAMC,aAAa,KAAKC,QAAQ,IAAjD,SACK5D,EACD,sBACI6D,SAAU,SAACjC,GACPA,EAAMkC,iBACNtE,QAAQC,IAAI,CAACqC,MAAOA,EAAOC,YAAaA,EAAaE,KAAMA,EAAMa,QAASA,EAASE,kBAAmBA,EAAmBE,kBAAmBA,IAC5IlD,GH/BC,SAACA,EAAY4B,GAClCmC,YAAO7C,YAAI8C,YAAWhF,EAAI,QAASgB,EAAKiE,IAAK,WAAYrC,GG8B7BsC,CAAUlE,EAAM,CAAC8B,MAAOA,EAAOC,YAAaA,EAAaE,KAAMA,EAAMa,QAASA,EAASE,kBAAmBA,EAAmBE,kBAAmBA,KAJhK,SAOI,eAAC,IAAD,CAAaiB,YAAU,EAACC,GAAG,cAA3B,UACI,cAAC,IAAD,oBACA,cAAC,IAAD,CAAOC,KAAK,OAAOC,SAAU,SAAC1C,GAAD,OAAWe,EAASf,EAAM2C,OAAOhE,UAC9D,cAAC,IAAD,0BACA,cAAC,IAAD,CAAU+D,SAAU,SAAC1C,GAAD,OAAWgB,EAAehB,EAAM2C,OAAOhE,UAC3D,cAAC,IAAD,mBACA,cAAC,aAAD,CAAYiE,aAAc,IAAIxC,KAAQyC,aAAc,SAACxC,GAAD,OAAUA,GAAQY,EAAQZ,MAC9E,cAAC,IAAD,sBACA,cAAC,IAAD,CAAOoC,KAAK,OAAOC,SAAU,SAAC1C,GAAD,OAAWmB,EAAWnB,EAAM2C,OAAOhE,UAChE,cAAC,IAAD,+BAEA,eAAC,IAAD,CAAOmE,UAAQ,EAAf,UACI,eAAC,IAAD,CAAaC,aAAc,EAAGC,IAAK,EAAGC,IAAK,IAA3C,UACI,cAAC,IAAD,CAAkBP,SAAU,SAAC1C,GAAD,OAAWqB,GAAsBrB,EAAM2C,OAAOhE,UAC1E,eAAC,IAAD,WACI,cAAC,IAAD,IACA,cAAC,IAAD,UAGR,eAAC,IAAD,CAAaoE,aAAc,GAAIC,IAAK,EAAGC,IAAK,IAA5C,UACI,cAAC,IAAD,CAAkBP,SAAU,SAAC1C,GAAD,OAAWuB,GAAsBvB,EAAM2C,OAAOhE,UAC1E,eAAC,IAAD,WACI,cAAC,IAAD,IACA,cAAC,IAAD,aAKZ,cAAC,IAAD,CACIuE,GAAI,EACJC,YAAY,OACZV,KAAK,SAHT,+BASlB,8BACE,cAAC,IAAD,UACI,cAAC,IAAD,CAAKT,QAAQ,MAAb,SACI,eAAC,IAAD,WACI,iEACA,cAAC,EAAD,eAOR,cAAC,IAAD,CACIkB,GAAI,EACJC,YAAY,OACZV,KAAK,SACL5B,QAAS,YHnFG,SAACzC,GACzB,OAAOS,YAAQuE,YAAMhB,YAAWhF,EAAI,QAASgB,EAAKiE,IAAK,UAAWgB,YAAQ,WGmF1DC,CAAalF,GAAOe,MAAK,SAAAF,GAAM,OAAIrB,QAAQC,IAAIoB,EAAOG,KAAKC,KAAI,SAAAC,GAAG,OAAIA,EAAIC,eALlF,0BAWA,cAAC,IAAD,CACI2D,GAAI,EACJC,YAAY,OACZV,KAAK,SACL5B,QAAS,WACLjC,IAAeO,MAAK,SAAAF,GAAM,OAAIrB,QAAQC,IAAIoB,EAAOG,KAAKC,KAAI,SAAAC,GAAG,OAAIA,EAAIC,eAL7E,8BC3FCgE,EAAQ,WAEjB,IAAMnF,EAAOoD,qBAAWzD,GAFD,EAIWI,mBAAmB,IAJ9B,mBAIhBqF,EAJgB,KAILC,EAJK,KAYvB,OANAnF,qBAAU,WACNM,IAAeO,MAAK,SAAAF,GAChBwE,EAAaxE,EAAOG,KAAKC,KAAI,SAAAC,GAAG,OAAIA,EAAIC,gBAE7C,IAGC,eAAC,IAAD,CAAKuC,YAAY,MAAMC,aAAa,KAAKC,QAAQ,IAAI0B,OAAO,MAA5D,UACI,iDADJ,IAC6B,uBACxBC,KAAKC,UAAUxF,GAChB,cAAC,IAAD,CAASsF,OAAO,gBAChB,6CAJJ,IAIyB,uBACpBC,KAAKC,UAAUJ,GAChB,cAAC,IAAD,CAASE,OAAO,gBAChB,yCAPJ,IAOqB,uBACjB,cAAC,IAAD,CAAQ7C,QAAS,WNE3BgD,YAAQ3G,GAAMiC,MAAK,eAChBzB,OAAM,SAACC,GACRC,QAAQC,IAAIF,EAAMG,aMJV,wBCdNgG,EAAQC,YAAY,CAAEvH,OALA,CAC1BwH,iBAAkB,OAClBC,oBAAoB,KA4BPC,MAvBf,WAEE,OACE,cAAC,IAAD,CAAgBJ,MAAOA,EAAvB,SACE,eAAC,EAAD,WACE,eAAC,IAAD,CAAKK,EAAE,OAAOnC,QAAQ,kBAAtB,UACA,cAAC,IAAD,CAASoC,YAAY,aAArB,qBAEE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,UAAUC,UAAWxD,IACjC,cAAC,IAAD,CAAOuD,KAAK,IAAIC,UAAWvF,YAMjC,cAAC,EAAD,UCnBOwF,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBtF,MAAK,YAAkD,IAA/CuF,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCHdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.a7027bc7.chunk.js","sourcesContent":["import dotenv from 'dotenv';\n//import firebase from \"firebase\";\n//import 'firebase/compat/auth';\n\nimport { initializeApp } from 'firebase/app'\nimport { getAuth, GoogleAuthProvider, signInWithPopup, signOut } from 'firebase/auth'\nimport { getFirestore } from \"firebase/firestore\";\n\ndotenv.config();\ninitializeApp({\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId:  process.env.REACT_APP_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_APP_ID,\n  measurementId: process.env.REACT_APP_MEASUREMENT_ID\n});\n\nexport const auth = getAuth();\nexport const db = getFirestore();\n\nconst googleProvider = new GoogleAuthProvider()\nexport const signInWithGoogle = () => {\n  return signInWithPopup(auth, googleProvider).catch((error) => {\n    console.log(error.message);\n  })\n}\n\nexport const logOut = () => {\n  signOut(auth).then(()=> {\n  }).catch((error) => {\n    console.log(error.message)\n  })\n}\n","import React, {useState, useEffect,  createContext} from \"react\";\nimport { auth } from \"../services/firebase\"\nimport { onAuthStateChanged, User } from 'firebase/auth';\nexport const UserContext = createContext<User | null>(null);\n\n\nexport const UserProvider: React.FC = ({ children }) => {\n    const [user, setUser] = useState<User | null>(null)\n    useEffect(() => {\n        onAuthStateChanged(auth, async (_user: User | null) => {\n            setUser(_user)\n        })\n    }, [])\n\n    return (\n        <UserContext.Provider value={user}>{children}</UserContext.Provider>\n    )\n}","import { User } from \"firebase/auth\";\nimport { collection, collectionGroup, doc, setDoc, getDocs, onSnapshot, orderBy, query, QuerySnapshot, DocumentData } from \"firebase/firestore\";\nimport { db } from \"./firebase\";\n\nexport const saveEvent = (user: User, event: object) => {\n    setDoc(doc(collection(db, 'users', user.uid, 'events')), event);\n}\n\nexport const getOwnEvents = (user: User) => {\n    return getDocs(query(collection(db, 'users', user.uid, 'events'), orderBy('date')));\n}\n\nexport const getAllEvents = () => {\n    //return getDocs(query(collectionGroup(db, 'events'), orderBy('date')));\n    return getDocs(collectionGroup(db, 'events')); // replace by the line above once index is built\n}\n\nexport const listenAllEvents = (callback: (event: QuerySnapshot<DocumentData>) => void) => (\n    onSnapshot(\n        collectionGroup(db, 'events'),\n        (snapshot) => (callback(snapshot))\n    )\n)","import { Box, Divider, Heading, Stat, StatHelpText, StatLabel, StatNumber } from '@chakra-ui/react';\nimport { DocumentData } from 'firebase/firestore';\nimport React from 'react';\nimport { useEffect } from 'react';\nimport { Virtuoso } from 'react-virtuoso';\nimport { getAllEvents } from '../services/database';\n\n\n\nexport const MainPage = () => {\n\n    //const user = useContext(UserContext);\n    const [events, setEvents] = React.useState<DocumentData[]>([]);\n\n    useEffect(() => {\n        getAllEvents().then(events => setEvents(events.docs.map(doc => doc.data())));\n    },[]);\n\n\n    useEffect(() => {\n        console.log(events);\n    })\n\n    return (\n        <div>\n            <Heading size='md'>All Events</Heading>\n            \n            \n            <button>Create Event</button>\n\n            <h2>Events</h2>\n            <Box height='md' maxHeight='lg'>\n\n            <Virtuoso\n                useWindowScroll\n                height='full'\n                totalCount={events.length}\n                itemContent={(index) => <EventItem event={(events[index])}></EventItem>}\n            />\n            </Box>\n\n\n        </div>\n    )\n}\n\n//type event = {title: string, description: string, date: Date, location: string, image: string}\nexport const EventItem = (event: any) => {\n    return (\n        <>\n        <Divider/>\n        <Stat>\n            {/*<Box w='100%' p='4' color='white'>\n            <Heading size='sm'>{event.event.title}</Heading>\n            <Heading size='xs'>{event.event.description}</Heading>\n            </Box>*/}\n            <StatNumber>{event.event.title}</StatNumber>\n            <StatLabel>{event.event.description}</StatLabel>\n            <StatHelpText>{new Date(event.event.date.seconds * 1000).toLocaleDateString()}</StatHelpText>\n        </Stat>\n\n        </>\n    )\n}\n\n\n\n\n","//import './Login.css'\nimport { Button } from '@chakra-ui/button';\nimport { signInWithGoogle } from './services/firebase';\n//import { Redirect } from 'react-router-dom';\n\nexport const Login = () => (\n    <Button\n      alignSelf='center'\n      leftIcon={<img src={\"https://upload.wikimedia.org/wikipedia/commons/thumb/5/53/Google_%22G%22_Logo.svg/24px-Google_%22G%22_Logo.svg.png\"} alt=''/>}\n      onClick={signInWithGoogle}>\n      Continue with Google\n    </Button>\n  );","import React, { useContext, useEffect } from 'react';\nimport { Box, Button, Center, FormControl, FormLabel, Input, NumberDecrementStepper, NumberIncrementStepper, NumberInput, NumberInputField, NumberInputStepper, Stack, Textarea } from '@chakra-ui/react';\nimport { DatePicker } from '@orange_digital/chakra-datepicker';\nimport { UserContext } from '../providers/UserProvider';\nimport { getAllEvents, getOwnEvents, listenAllEvents, saveEvent } from '../services/database';\nimport { Login } from '../Login';\n\n\n// Titel, desc, datum, creator, number of people? (min max),\nexport const CreatePage = () => {\n\n    const [title, setTitle] = React.useState('');\n    const [description, setDescription] = React.useState('');\n    const [date, setDate] = React.useState(new Date());\n    const [creator, setCreator] = React.useState('');\n    const [numberOfPeopleMin, setNumberOfPeopleMin] = React.useState(2);\n    const [numberOfPeopleMax, setNumberOfPeopleMax] = React.useState(10);\n\n    const user = useContext(UserContext);\n\n    useEffect(() => {\n        listenAllEvents(e => {\n            console.log('Listening on events...', e.docs.map(d => d.data()));\n        })\n    }, [])\n\n    return (\n        <div>\n            <h1>Create Page</h1>\n            <Box borderWidth='1px' borderRadius='lg' padding='2'>\n                {user ? \n                <form \n                    onSubmit={(event) => {\n                        event.preventDefault();\n                        console.log({title: title, description: description, date: date, creator: creator, numberOfPeopleMin: numberOfPeopleMin, numberOfPeopleMax: numberOfPeopleMax})\n                        user && saveEvent(user, {title: title, description: description, date: date, creator: creator, numberOfPeopleMin: numberOfPeopleMin, numberOfPeopleMax: numberOfPeopleMax});\n                    }}>\n\n                    <FormControl isRequired id=\"createEvent\" >\n                        <FormLabel>Title</FormLabel>\n                        <Input type=\"text\" onChange={(event) => setTitle(event.target.value)}/>\n                        <FormLabel>Description</FormLabel>\n                        <Textarea onChange={(event) => setDescription(event.target.value)}/>\n                        <FormLabel>Date</FormLabel>\n                        <DatePicker initialValue={new Date()} onDateChange={(date) => date && setDate(date)}/>\n                        <FormLabel>Creator</FormLabel>\n                        <Input type=\"text\" onChange={(event) => setCreator(event.target.value)}/>\n                        <FormLabel>Number of people</FormLabel>\n                        \n                        <Stack isInline>\n                            <NumberInput defaultValue={2} min={2} max={100}>\n                                <NumberInputField onChange={(event) => setNumberOfPeopleMin(+event.target.value)}/>\n                                <NumberInputStepper>\n                                    <NumberIncrementStepper />\n                                    <NumberDecrementStepper />\n                                </NumberInputStepper>\n                            </NumberInput>\n                            <NumberInput defaultValue={10} min={2} max={100}>\n                                <NumberInputField onChange={(event) => setNumberOfPeopleMax(+event.target.value)}/>\n                                <NumberInputStepper>\n                                    <NumberIncrementStepper />\n                                    <NumberDecrementStepper />\n                                </NumberInputStepper>\n                            </NumberInput>\n                        </Stack>\n                        \n                        <Button\n                            mt={4}\n                            colorScheme=\"teal\"\n                            type=\"submit\"\n                        >\n                            Create Event\n                        </Button>\n                    </FormControl>\n                </form>\n    : <div>\n        <Center>\n            <Box padding='5em'>\n                <Stack>\n                    <h1>Please login to create an event</h1>\n                    <Login />\n                </Stack>\n            </Box>\n        </Center>\n    </div>}\n\n            </Box>\n            <Button\n                mt={4}\n                colorScheme=\"teal\"\n                type=\"submit\"\n                onClick={() => {\n                    getOwnEvents(user!).then(events => console.log(events.docs.map(doc => doc.data())));\n                }}\n            >\n                Create Event\n            </Button>\n\n            <Button\n                mt={4}\n                colorScheme=\"teal\"\n                type=\"submit\"\n                onClick={() => {\n                    getAllEvents().then(events => console.log(events.docs.map(doc => doc.data())));\n                }}\n            >\n                Create Event\n            </Button>\n        </div>\n    );\n};\n","import { Button } from '@chakra-ui/button';\nimport { Box, Divider } from '@chakra-ui/layout';\nimport React, { useContext, useEffect, useState } from 'react';\nimport { UserContext } from '../providers/UserProvider';\nimport { getAllEvents } from '../services/database';\nimport { logOut } from '../services/firebase';\n\nexport const Debug = () => {\n\n    const user = useContext(UserContext);\n\n    const [allEvents, setAllEvents] = useState<object[]>([]);\n\n    useEffect(() => {\n        getAllEvents().then(events => {\n            setAllEvents(events.docs.map(doc => doc.data()));\n        })\n    }, []);\n\n    return (\n        <Box borderWidth='1px' borderRadius='lg' padding='2' margin='5em'>\n            <h1>Logged in user:</h1> <br/>\n            {JSON.stringify(user)}\n            <Divider margin='2em 0 2em 0' />\n            <h1>All Events:</h1> <br/>\n            {JSON.stringify(allEvents)}\n            <Divider margin='2em 0 2em 0' />\n            <h1>Logout:</h1> <br/>\n            <Button onClick={() => logOut()}>Logout</Button>\n        </Box>\n    )\n}","import React from 'react';\nimport './App.css';\nimport { UserProvider } from './providers/UserProvider';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport { MainPage } from './pages/MainPage';\nimport { Box, ChakraProvider, extendTheme, Heading, ThemeConfig } from \"@chakra-ui/react\"\nimport { CreatePage } from './pages/CreatePage';\nimport { Debug } from './components/Debug';\n\nconst config: ThemeConfig = {\n  initialColorMode: \"dark\",\n  useSystemColorMode: true,\n}\n\nconst theme = extendTheme({ config });\n\nfunction App() {\n\n  return (\n    <ChakraProvider theme={theme}>\n      <UserProvider>\n        <Box w='100%' padding='5em 20% 5em 20%'>\n        <Heading orientation='horizontal'>MeetHub</Heading>\n        \n          <HashRouter>\n            <Switch>\n              <Route path='/create' component={CreatePage} />\n              <Route path='/' component={MainPage}/>\n            </Switch>\n          </HashRouter>\n          \n        </Box>\n\n        <Debug />\n      </UserProvider>\n    </ChakraProvider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}