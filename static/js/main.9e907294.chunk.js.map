{"version":3,"sources":["services/firebase.ts","providers/UserProvider.tsx","services/database.ts","pages/MainPage.tsx","Login.tsx","pages/CreatePage.tsx","components/Debug.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["dotenv","config","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","getAuth","db","getFirestore","googleProvider","GoogleAuthProvider","signInWithGoogle","signInWithPopup","catch","error","console","log","message","UserContext","createContext","UserProvider","children","useState","user","setUser","useEffect","onAuthStateChanged","_user","a","Provider","value","getAllEvents","getDocs","collectionGroup","listenAllEvents","callback","onSnapshot","snapshot","MainPage","React","events","setEvents","docs","map","doc","data","id","creatorId","ref","parent","fontWeight","mt","size","borderWidth","borderRadius","padding","marginTop","useWindowScroll","totalCount","length","itemContent","index","event","EventItem","useContext","user_has_joined","interested","Object","keys","includes","uid","isLoading","setIsLoading","p","direction","justify","fontFamily","mb","fontSize","color","Date","date","seconds","toLocaleDateString","values","sort","b","userId","localeCompare","src","photoURL","rounded","boxSize","aria-label","icon","Minus","Add","alt","isRound","variant","onClick","eventId","updateDoc","deleteField","leaveEvent","displayName","isAnonymous","joinEvent","setTimeout","base","md","title","description","Login","alignSelf","leftIcon","CreatePage","setTitle","setDescription","setDate","creator","setCreator","numberOfPeopleMin","setNumberOfPeopleMin","numberOfPeopleMax","setNumberOfPeopleMax","e","d","onSubmit","preventDefault","setDoc","collection","saveEvent","isRequired","type","onChange","target","initialValue","onDateChange","isInline","defaultValue","min","max","colorScheme","query","orderBy","getOwnEvents","then","Debug","allEvents","setAllEvents","margin","JSON","stringify","signOut","theme","extendTheme","initialColorMode","useSystemColorMode","App","w","orientation","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9e907294.chunk.js","sourcesContent":["import dotenv from 'dotenv';\n\nimport { initializeApp } from 'firebase/app'\nimport { getAuth, GoogleAuthProvider, signInWithPopup, signOut } from 'firebase/auth'\nimport { getFirestore } from \"firebase/firestore\";\n\ndotenv.config();\ninitializeApp({\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId:  process.env.REACT_APP_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_APP_ID,\n  measurementId: process.env.REACT_APP_MEASUREMENT_ID\n});\n\nexport const auth = getAuth();\nexport const db = getFirestore();\n\nconst googleProvider = new GoogleAuthProvider()\nexport const signInWithGoogle = () => {\n  return signInWithPopup(auth, googleProvider).catch((error) => {\n    console.log(error.message);\n  })\n}\n\nexport const logOut = () => {\n  signOut(auth).then(()=> {\n  }).catch((error) => {\n    console.log(error.message)\n  })\n}\n","import React, {useState, useEffect,  createContext} from \"react\";\nimport { auth } from \"../services/firebase\"\nimport { onAuthStateChanged, User } from 'firebase/auth';\nexport const UserContext = createContext<User | null>(null);\n\n\nexport const UserProvider: React.FC = ({ children }) => {\n    const [user, setUser] = useState<User | null>(null)\n    useEffect(() => {\n        onAuthStateChanged(auth, async (_user: User | null) => {\n            setUser(_user)\n        })\n    }, [])\n\n    return (\n        <UserContext.Provider value={user}>{children}</UserContext.Provider>\n    )\n}","import { User } from \"firebase/auth\";\nimport { collection, collectionGroup, doc, setDoc, getDocs, onSnapshot, orderBy, query, QuerySnapshot, DocumentData, deleteField, updateDoc } from \"firebase/firestore\";\nimport { db } from \"./firebase\";\n\nexport const saveEvent = (user: User, event: object) => {\n    setDoc(doc(collection(db, 'users', user.uid, 'events')), event);\n}\n\nexport const getOwnEvents = (user: User) => {\n    return getDocs(query(collection(db, 'users', user.uid, 'events'), orderBy('date')));\n}\n\nexport const getAllEvents = () => {\n    //return getDocs(query(collectionGroup(db, 'events'), orderBy('date')));\n    return getDocs(collectionGroup(db, 'events')); // replace by the line above once index is built\n}\n\nexport const listenAllEvents = (callback: (event: QuerySnapshot<DocumentData>) => void) => (\n    onSnapshot(\n        collectionGroup(db, 'events'),\n        (snapshot) => (callback(snapshot))\n    )\n)\n\nexport const joinEvent = (creatorId: string, eventId: string, user: User) => {\n\n    return updateDoc(doc(db, 'users', creatorId, 'events', eventId), 'interested.'+user.uid, {\n        userId: user.uid,\n        displayName: user.displayName,\n        photoURL: user.photoURL,\n        isAnonymous: user.isAnonymous\n    });\n\n}\n\nexport const leaveEvent = (creatorId: string, eventId: string, user: User) => {\n\n    return updateDoc(doc(db, 'users', creatorId, 'events', eventId), 'interested.'+user.uid, deleteField());\n\n}","import { AddIcon, MinusIcon } from '@chakra-ui/icons';\nimport { Box, Divider, Heading, Text, Image, HStack, Stack, IconButton } from '@chakra-ui/react';\nimport { DocumentData } from 'firebase/firestore';\nimport React, { useContext, useState } from 'react';\nimport { useEffect } from 'react';\nimport { Virtuoso } from 'react-virtuoso';\nimport { UserContext } from '../providers/UserProvider';\nimport { joinEvent, leaveEvent, listenAllEvents } from '../services/database';\n\n\n\nexport const MainPage = () => {\n\n    //const user = useContext(UserContext);\n    const [events, setEvents] = React.useState<DocumentData[]>([]);\n\n    useEffect(() => {\n        listenAllEvents(events => setEvents(events.docs.map(doc => ({...doc.data(), id: doc.id, creatorId: doc.ref.parent.parent?.id}))));\n    }, []);\n\n    return (\n        <div>\n            <Heading fontWeight='medium' mt='5' size='lg'>All Events</Heading>\n            \n            <Box borderWidth='1px' borderRadius='lg' padding='0' marginTop='2'>\n            \n            {/* {events.map(e => <EventItem event={e} key={e.id}/>)} */}\n\n            <Virtuoso\n                useWindowScroll\n                totalCount={events.length}\n                \n                itemContent={(index) => <>{(index !== 0) && <Divider/>}<EventItem event={(events[index])}/></>}\n            />\n            </Box>\n\n\n        </div>\n    )\n}\n\n//type event = {title: string, description: string, date: Date, location: string, image: string}\nexport const EventItem = (event: any) => {\n\n    const user = useContext(UserContext)\n\n    const user_has_joined = user && event.event.interested && Object.keys(event.event.interested).includes(user.uid)\n\n    const [isLoading, setIsLoading] = useState(false);\n\n    return (\n        <Box p={5}>\n            \n            <Stack direction='row' justify='space-between'>\n                <Text fontFamily={'heading'} fontWeight={700} mb={3} fontSize='md' color={'gray.500'}>{new Date(event.event.date.seconds * 1000).toLocaleDateString()}</Text>\n                <HStack>{event.event.interested && Object.values(event.event.interested).length > 0\n                        ? [...Object.values(event.event.interested)].sort((a:any, b:any) => a.userId.localeCompare(b.userId))\n                            .map((user: any) => <Image key={user.userId} src={user.photoURL} rounded='full' boxSize='8'/>) \n                        : 'None'}\n\n                    {user && <IconButton\n                        aria-label=\"interested\"\n                        icon={user_has_joined ? <MinusIcon />  : <AddIcon />} \n                        alt=''\n                        isRound={true}\n                        size='sm'\n                        variant='ghost'\n                        isLoading={isLoading}\n                        onClick={() => {\n                            user_has_joined ? leaveEvent(event.event.creatorId, event.event.id, user!) : joinEvent(event.event.creatorId, event.event.id, user!)\n                            setIsLoading(true);\n                            setTimeout(() => setIsLoading(false), 500);\n                        }}\n                        />}\n\n                </HStack>\n            </Stack>\n            <Heading mb={3} fontSize={{base: 'xl', md: '2xl'}}>{event.event.title}</Heading>\n            <Text fontSize={'md'} color={'gray.400'}>{event.event.description}</Text>\n\n        </Box>\n    )\n}\n\n\n\n","//import './Login.css'\nimport { Button } from '@chakra-ui/button';\nimport { signInWithGoogle } from './services/firebase';\n//import { Redirect } from 'react-router-dom';\n\nexport const Login = () => (\n    <Button\n      alignSelf='center'\n      leftIcon={<img src={\"https://upload.wikimedia.org/wikipedia/commons/thumb/5/53/Google_%22G%22_Logo.svg/24px-Google_%22G%22_Logo.svg.png\"} alt=''/>}\n      onClick={signInWithGoogle}>\n      Continue with Google\n    </Button>\n  );","import React, { useContext, useEffect } from 'react';\nimport { Box, Button, Center, FormControl, FormLabel, Input, NumberDecrementStepper, NumberIncrementStepper, NumberInput, NumberInputField, NumberInputStepper, Stack, Textarea } from '@chakra-ui/react';\nimport { DatePicker } from '@orange_digital/chakra-datepicker';\nimport { UserContext } from '../providers/UserProvider';\nimport { getAllEvents, getOwnEvents, listenAllEvents, saveEvent } from '../services/database';\nimport { Login } from '../Login';\n\n\n// Titel, desc, datum, creator, number of people? (min max),\nexport const CreatePage = () => {\n\n    const [title, setTitle] = React.useState('');\n    const [description, setDescription] = React.useState('');\n    const [date, setDate] = React.useState(new Date());\n    const [creator, setCreator] = React.useState('');\n    const [numberOfPeopleMin, setNumberOfPeopleMin] = React.useState(2);\n    const [numberOfPeopleMax, setNumberOfPeopleMax] = React.useState(10);\n\n    const user = useContext(UserContext);\n\n    useEffect(() => {\n        listenAllEvents(e => {\n            console.log('Listening on events...', e.docs.map(d => d.data()));\n        })\n    }, [])\n\n    return (\n        <div>\n            <h1>Create Page</h1>\n            <Box borderWidth='1px' borderRadius='lg' padding='2'>\n                {user ? \n                <form \n                    onSubmit={(event) => {\n                        event.preventDefault();\n                        console.log({title: title, description: description, date: date, creator: creator, numberOfPeopleMin: numberOfPeopleMin, numberOfPeopleMax: numberOfPeopleMax})\n                        user && saveEvent(user, {title: title, description: description, date: date, creator: creator, numberOfPeopleMin: numberOfPeopleMin, numberOfPeopleMax: numberOfPeopleMax});\n                    }}>\n\n                    <FormControl isRequired id=\"createEvent\" >\n                        <FormLabel>Title</FormLabel>\n                        <Input type=\"text\" onChange={(event) => setTitle(event.target.value)}/>\n                        <FormLabel>Description</FormLabel>\n                        <Textarea onChange={(event) => setDescription(event.target.value)}/>\n                        <FormLabel>Date</FormLabel>\n                        <DatePicker initialValue={new Date()} onDateChange={value => value && setDate(value)}/>\n                        <FormLabel>Creator</FormLabel>\n                        <Input type=\"text\" onChange={(event) => setCreator(event.target.value)}/>\n                        <FormLabel>Number of people</FormLabel>\n                        \n                        <Stack isInline>\n                            <NumberInput defaultValue={2} min={2} max={100}>\n                                <NumberInputField onChange={(event) => setNumberOfPeopleMin(+event.target.value)}/>\n                                <NumberInputStepper>\n                                    <NumberIncrementStepper />\n                                    <NumberDecrementStepper />\n                                </NumberInputStepper>\n                            </NumberInput>\n                            <NumberInput defaultValue={10} min={2} max={100}>\n                                <NumberInputField onChange={(event) => setNumberOfPeopleMax(+event.target.value)}/>\n                                <NumberInputStepper>\n                                    <NumberIncrementStepper />\n                                    <NumberDecrementStepper />\n                                </NumberInputStepper>\n                            </NumberInput>\n                        </Stack>\n                        \n                        <Button\n                            mt={4}\n                            colorScheme=\"teal\"\n                            type=\"submit\"\n                        >\n                            Create Event\n                        </Button>\n                    </FormControl>\n                </form>\n    : <div>\n        <Center>\n            <Box padding='5em'>\n                <Stack>\n                    <h1>Please login to create an event</h1>\n                    <Login />\n                </Stack>\n            </Box>\n        </Center>\n    </div>}\n\n            </Box>\n            <Button\n                mt={4}\n                colorScheme=\"teal\"\n                type=\"submit\"\n                onClick={() => {\n                    getOwnEvents(user!).then(events => console.log(events.docs.map(doc => doc.data())));\n                }}\n            >\n                Create Event\n            </Button>\n\n            <Button\n                mt={4}\n                colorScheme=\"teal\"\n                type=\"submit\"\n                onClick={() => {\n                    getAllEvents().then(events => console.log(events.docs.map(doc => doc.data())));\n                }}\n            >\n                Create Event\n            </Button>\n        </div>\n    );\n};\n","import { Button } from '@chakra-ui/button';\nimport { Box, Divider } from '@chakra-ui/layout';\nimport React, { useContext, useEffect, useState } from 'react';\nimport { Login } from '../Login';\nimport { UserContext } from '../providers/UserProvider';\nimport { getAllEvents } from '../services/database';\nimport { logOut } from '../services/firebase';\n\nexport const Debug = () => {\n\n    const user = useContext(UserContext);\n\n    const [allEvents, setAllEvents] = useState<object[]>([]);\n\n    useEffect(() => {\n        getAllEvents().then(events => {\n            setAllEvents(events.docs.map(doc => doc.data()));\n        })\n    }, []);\n\n    return (\n        <Box borderWidth='1px' borderRadius='lg' padding='2' margin='5em'>\n            <h1>Log in</h1> <br/>\n            <Login />\n            <Divider margin='2em 0 2em 0' />\n\n            <h1>Logged in user:</h1> <br/>\n            {JSON.stringify(user)}\n            <Divider margin='2em 0 2em 0' />\n            \n            <h1>All Events:</h1> <br/>\n            {JSON.stringify(allEvents)}\n            <Divider margin='2em 0 2em 0' />\n            \n            <h1>Logout:</h1> <br/>\n            <Button onClick={() => logOut()}>Logout</Button>\n        </Box>\n    )\n}","import React from 'react';\nimport './App.css';\nimport { UserProvider } from './providers/UserProvider';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport { MainPage } from './pages/MainPage';\nimport { Box, ChakraProvider, extendTheme, Heading, ThemeConfig } from \"@chakra-ui/react\"\nimport { CreatePage } from './pages/CreatePage';\nimport { Debug } from './components/Debug';\n\nconst config: ThemeConfig = {\n  initialColorMode: \"dark\",\n  useSystemColorMode: true,\n}\n\nconst theme = extendTheme({ config });\n\nfunction App() {\n\n  return (\n    <ChakraProvider theme={theme}>\n      <UserProvider>\n        <Box w='100%' padding='5em 20% 5em 20%'>\n        <Heading size='2xl' orientation='horizontal'>MeetHub</Heading>\n        \n          <HashRouter>\n            <Switch>\n              <Route path='/create' component={CreatePage} />\n              <Route path='/' component={MainPage}/>\n            </Switch>\n          </HashRouter>\n          \n        </Box>\n\n        <Debug />\n      </UserProvider>\n    </ChakraProvider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}